
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE OR REPLACE FUNCTION "public"."handle_new_auth"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    AS $$
begin
  insert into public.info_admin (id, email)
  values (new.id, new.email);
  return new;
end;

$$;

ALTER FUNCTION "public"."handle_new_auth"() OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."update_pedido_total"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
  -- Calculate the total_in_cents before inserting the new row
  NEW.total_in_cents = (SELECT preco_in_cents FROM produtos WHERE id = NEW.produto) * NEW.quantidade;
  RETURN NEW;
END;
$$;

ALTER FUNCTION "public"."update_pedido_total"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."clientes" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "nome" "text" DEFAULT ''::"text" NOT NULL,
    "telefone" "text" DEFAULT ''::"text" NOT NULL,
    "mesa" "text" DEFAULT ''::"text" NOT NULL,
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL
);

ALTER TABLE "public"."clientes" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."info_admin" (
    "id" "uuid" NOT NULL,
    "perm_estoque" boolean DEFAULT false NOT NULL,
    "perm_editar_cardapio" boolean DEFAULT false NOT NULL,
    "perm_editar_perms" boolean DEFAULT false NOT NULL,
    "email" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."info_admin" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."pedidos" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "cliente_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "quantidade" smallint DEFAULT '1'::smallint NOT NULL,
    "produto" bigint DEFAULT '0'::bigint NOT NULL,
    "status" "text" DEFAULT 'Pendente'::"text" NOT NULL,
    "observacao" "text" DEFAULT ''::"text" NOT NULL,
    "updated_by" "uuid",
    "total_in_cents" bigint DEFAULT '0'::bigint NOT NULL
);

ALTER TABLE "public"."pedidos" OWNER TO "postgres";

ALTER TABLE "public"."pedidos" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pedidos_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."produtos" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "nome" "text" DEFAULT ''::"text" NOT NULL,
    "descricao" "text" DEFAULT ''::"text" NOT NULL,
    "preco_in_cents" bigint NOT NULL,
    "categoria" "text" DEFAULT ''::"text" NOT NULL,
    "sub_categoria" "text" DEFAULT ''::"text" NOT NULL,
    "image_url" "text" DEFAULT ''::"text" NOT NULL,
    "vegan" boolean DEFAULT false NOT NULL,
    "visible" boolean DEFAULT true NOT NULL
);

ALTER TABLE "public"."produtos" OWNER TO "postgres";

ALTER TABLE "public"."produtos" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."products_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."clientes"
    ADD CONSTRAINT "clientes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."pedidos"
    ADD CONSTRAINT "pedidos_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."info_admin"
    ADD CONSTRAINT "perms_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."produtos"
    ADD CONSTRAINT "products_name_key" UNIQUE ("nome");

ALTER TABLE ONLY "public"."produtos"
    ADD CONSTRAINT "products_pkey" PRIMARY KEY ("id");

CREATE OR REPLACE TRIGGER "set_pedido_total_trigger" BEFORE INSERT ON "public"."pedidos" FOR EACH ROW EXECUTE FUNCTION "public"."update_pedido_total"();

ALTER TABLE ONLY "public"."info_admin"
    ADD CONSTRAINT "info_admin_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."pedidos"
    ADD CONSTRAINT "pedidos_cliente_id_fkey" FOREIGN KEY ("cliente_id") REFERENCES "public"."clientes"("id");

ALTER TABLE ONLY "public"."pedidos"
    ADD CONSTRAINT "pedidos_produto_fkey" FOREIGN KEY ("produto") REFERENCES "public"."produtos"("id");

ALTER TABLE ONLY "public"."pedidos"
    ADD CONSTRAINT "pedidos_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "public"."info_admin"("id");

CREATE POLICY "Allow authenticated access" ON "public"."clientes" TO "authenticated" USING (true);

CREATE POLICY "Enable authenticated users" ON "public"."produtos" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable delete for authenticated users only" ON "public"."produtos" FOR DELETE TO "authenticated" USING (true);

CREATE POLICY "Enable insert access for all users" ON "public"."pedidos" FOR INSERT WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."pedidos" FOR UPDATE TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."clientes" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."pedidos" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."produtos" FOR SELECT USING (true);

ALTER TABLE "public"."clientes" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."info_admin" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."pedidos" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."produtos" ENABLE ROW LEVEL SECURITY;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."handle_new_auth"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_auth"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_auth"() TO "service_role";

GRANT ALL ON FUNCTION "public"."update_pedido_total"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_pedido_total"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_pedido_total"() TO "service_role";

GRANT ALL ON TABLE "public"."clientes" TO "anon";
GRANT ALL ON TABLE "public"."clientes" TO "authenticated";
GRANT ALL ON TABLE "public"."clientes" TO "service_role";

GRANT ALL ON TABLE "public"."info_admin" TO "anon";
GRANT ALL ON TABLE "public"."info_admin" TO "authenticated";
GRANT ALL ON TABLE "public"."info_admin" TO "service_role";

GRANT ALL ON TABLE "public"."pedidos" TO "anon";
GRANT ALL ON TABLE "public"."pedidos" TO "authenticated";
GRANT ALL ON TABLE "public"."pedidos" TO "service_role";

GRANT ALL ON SEQUENCE "public"."pedidos_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pedidos_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pedidos_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."produtos" TO "anon";
GRANT ALL ON TABLE "public"."produtos" TO "authenticated";
GRANT ALL ON TABLE "public"."produtos" TO "service_role";

GRANT ALL ON SEQUENCE "public"."products_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."products_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."products_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
